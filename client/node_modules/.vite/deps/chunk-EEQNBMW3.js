import {
  makeBorderProps,
  makeElevationProps,
  useBorder,
  useElevation
} from "./chunk-6Z5QFOBB.js";
import {
  makeRoundedProps,
  useRounded
} from "./chunk-PUCGRCIO.js";
import {
  useBackgroundColor
} from "./chunk-AOAYMICR.js";
import {
  makeTagProps
} from "./chunk-JP4C72TP.js";
import {
  makeLayoutItemProps,
  useLayoutItem
} from "./chunk-F5RAP44W.js";
import {
  useResizeObserver
} from "./chunk-HMRG2EBJ.js";
import {
  makeThemeProps,
  provideTheme
} from "./chunk-3CRERRAY.js";
import {
  genericComponent,
  useRender
} from "./chunk-CM7GDJOJ.js";
import {
  computed,
  createVNode,
  ref,
  toRef
} from "./chunk-3NMN3MUW.js";

// node_modules/vuetify/lib/components/VFooter/VFooter.mjs
import "/Users/tobiaskauer/Projects/viscussion/client/node_modules/vuetify/lib/components/VFooter/VFooter.css";
var VFooter = genericComponent()({
  name: "VFooter",
  props: {
    app: Boolean,
    color: String,
    height: {
      type: [Number, String],
      default: "auto"
    },
    ...makeBorderProps(),
    ...makeElevationProps(),
    ...makeLayoutItemProps(),
    ...makeRoundedProps(),
    ...makeTagProps({
      tag: "footer"
    }),
    ...makeThemeProps()
  },
  setup(props, _ref) {
    let {
      slots
    } = _ref;
    const {
      themeClasses
    } = provideTheme(props);
    const {
      backgroundColorClasses,
      backgroundColorStyles
    } = useBackgroundColor(toRef(props, "color"));
    const {
      borderClasses
    } = useBorder(props);
    const {
      elevationClasses
    } = useElevation(props);
    const {
      roundedClasses
    } = useRounded(props);
    const autoHeight = ref(32);
    const {
      resizeRef
    } = useResizeObserver((entries) => {
      if (!entries.length)
        return;
      autoHeight.value = entries[0].target.clientHeight;
    });
    const height = computed(() => props.height === "auto" ? autoHeight.value : parseInt(props.height, 10));
    const {
      layoutItemStyles
    } = useLayoutItem({
      id: props.name,
      order: computed(() => parseInt(props.order, 10)),
      position: computed(() => "bottom"),
      layoutSize: height,
      elementSize: computed(() => props.height === "auto" ? void 0 : height.value),
      active: computed(() => props.app),
      absolute: toRef(props, "absolute")
    });
    useRender(() => createVNode(props.tag, {
      "ref": resizeRef,
      "class": ["v-footer", themeClasses.value, backgroundColorClasses.value, borderClasses.value, elevationClasses.value, roundedClasses.value],
      "style": [backgroundColorStyles.value, props.app ? layoutItemStyles.value : void 0]
    }, slots));
    return {};
  }
});

export {
  VFooter
};
//# sourceMappingURL=chunk-EEQNBMW3.js.map
